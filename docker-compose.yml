services:
  attack-web-db:
    image: postgres
    ports:
      - "5433:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth-db
    networks:
      - attack-web
    container_name: attack-web-db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5


  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - 8000:8000
    volumes:
      - .:/var/www/html
    depends_on:
      - attack-web-db
    environment:
      - DB_HOST=attack-web-db
      - DB_DATABASE=auth-db
    networks:
      - attack-web
    entrypoint: [ '/bin/sh', '-c' ]
    command:
      - |
        composer install
        php artisan migrate
        php artisan serve --host=0.0.0.0 --port=8000
  data-processing-service:
    build:
      context: ./data-processing-service
      dockerfile: Dockerfile
    container_name: data-processing-service
    ports:
      - 8010:8001
    volumes:
      - ./data-processing-service:/usr/src/app
    depends_on:
      - attack-web-db
    environment:
      - DB_HOST=attack-web-db
    networks:
      - attack-web

  
  elasticsearch:
    image: elasticsearch:${STACK_VERSION}
    container_name: es
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - attack-web
  # logstash:
  #   image: logstash:${STACK_VERSION}
  #   container_name: log
  #   environment:
  #     discovery.seed_hosts: logstash
  #     LS_JAVA_OPTS: "-Xms512m -Xmx512m"
  #   volumes:
  #     - ./logstash/pipeline/logstash-nginx.config:/usr/share/logstash/pipeline/logstash-nginx.config
  #     - ./logstash/nginx.log:/home/nginx.log
  #     - ./logstash/pipeline/logstash-bgl.config:/usr/share/logstash/pipeline/logstash-bgl.config
  #     - ./logstash/bgl.log:/home/bgl.log
  #     - ./logstash/pipeline/logstash-Thunderbird.config:/usr/share/logstash/pipeline/logstash-Thunderbird.config
  #     - ./logstash/bgl.log:/home/Thunderbird.log
  #   ports:
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "5044:5044"
  #     - "9600:9600"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - attack-web
  #   command: logstash -f /usr/share/logstash/pipeline/logstash-nginx.config -f /usr/share/logstash/pipeline/logstash-bgl.config -f /usr/share/logstash/pipeline/logstash-Thunderbird.config


            
  # kibana:
  #   image: kibana:${STACK_VERSION}
  #   container_name: kib
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - attack-web
  

  # filebeat:
  #   depends_on:
  #     - elasticsearch
  #   image: docker.elastic.co/beats/filebeat:${STACK_VERSION}
  #   container_name: filebeat
  #   volumes:
  #     - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
  #     - ./test.log:/var/log/app_logs/test.log
  #     - certs:/usr/share/elasticsearch/config/certs
  #   environment:
  #     - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
  #     - ELASTICSEARCH_USERNAME=elastic
  #     - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
  #     - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
  
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: attack-web-frontend
  #   ports:
  #     - "5173:5173"
  #   networks:
  #     - attack-web
  

networks:
  attack-web:
    driver: bridge
  
volumes:
  dbdata:
    driver: local